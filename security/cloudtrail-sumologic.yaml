---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudTrail across all regions with support for multiple accounts'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'CloudTrail Parameters'
      Parameters:
      - CloudWatchLogsRetentionInDays
      - ExternalTrailBucket
    - Label:
        default: 'CloudTrail Multi Account Parameters'
      Parameters:
      - AdditionalAccounts
      - TrailKeyArn

Parameters:
  CloudWatchLogsRetentionInDays:
    Description: 'The number of days log events are kept in CloudWatch Logs'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  ExternalTrailBucket:
    Description: 'Optional The name of the Amazon S3 bucket where CloudTrail publishes log files. If you leave this empty, the Amazon S3 bucket is created for you.'
    Type: String
  AdditionalAccounts:
    Description: 'The account ids which are allowed to write to the CloudTrail bucket'
    Type: CommaDelimitedList
  TrailKeyArn:
    Description: 'The ARN of the KMS Key which should be used to encrypt the CloudTrail logs. This is only required if using a External Trail bucket.'
    Type: String
Conditions:
  InternalBucket: !Equals [!Ref ExternalTrailBucket, '']
  ExternalBucket: !Not [!Equals [!Ref ExternalTrailBucket, '']]
Resources:

  Sumologic:
    Condition: InternalBucket
    Type: "AWS::IAM::User"
    Properties: {}

  SumologicAccessKey:
    Condition: InternalBucket
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        !Ref Sumologic

  TrailAccessLogBucket:
    Condition: InternalBucket
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: LogDeliveryWrite
    DeletionPolicy: Retain

  TrailBucket:
    Condition: InternalBucket
    Type: 'AWS::S3::Bucket'
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref TrailAccessLogBucket
    DeletionPolicy: Retain

  TrailBucketPolicy:
    Condition: InternalBucket
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref TrailBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailAclCheck
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:GetBucketAcl'
          Resource: !Sub 'arn:aws:s3:::${TrailBucket}'
        - Sid: SumologicReadAccess
          Effect: Allow
          Principal:
            AWS: !GetAtt Sumologic.Arn
          Action:
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucketVersions"
            - "s3:ListBucket"
          Resource:
            - !Sub 'arn:aws:s3:::${TrailBucket}'
            - !Sub 'arn:aws:s3:::${TrailBucket}/*'
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:PutObject'
          # Extend this as required for the number of account ids. By default the current account is added
          Resource:
            - !Sub 'arn:aws:s3:::${TrailBucket}/AWSLogs/${AWS::AccountId}/*'
            - !Join [ "", [ !Sub "arn:aws:s3:::${TrailBucket}/AWSLogs/", !Select [0, !Ref AdditionalAccounts ], "/*" ] ]
            - !Join [ "", [ !Sub "arn:aws:s3:::${TrailBucket}/AWSLogs/", !Select [1, !Ref AdditionalAccounts ], "/*" ] ]
            - !Join [ "", [ !Sub "arn:aws:s3:::${TrailBucket}/AWSLogs/", !Select [2, !Ref AdditionalAccounts ], "/*" ] ]
          Condition:
            StringEquals:
              's3:x-amz-acl': 'bucket-owner-full-control'

  TrailAccessLogBucketPolicy:
    Condition: InternalBucket
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref TrailAccessLogBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: SumologicReadAccess
          Effect: Allow
          Principal:
            AWS: !GetAtt Sumologic.Arn
          Action:
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucketVersions"
            - "s3:ListBucket"
          Resource:
            - !Sub 'arn:aws:s3:::${TrailAccessLogBucket}'
            - !Sub 'arn:aws:s3:::${TrailAccessLogBucket}/*'

  TrailLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref CloudWatchLogsRetentionInDays

  TrailLogGroupRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - 'cloudtrail.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
      -
        PolicyName: 'cloudtrail-policy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          -
            Effect: Allow
            Action: 'logs:CreateLogStream'
            Resource: !Sub '${TrailLogGroup.Arn}'
          -
            Effect: Allow
            Action: 'logs:PutLogEvents'
            Resource: !Sub '${TrailLogGroup.Arn}'

  TrailTopic:
    Type: 'AWS::SNS::Topic'
    Properties: {}
  TrailTopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Version: '2008-10-17'
        Statement:
        - Sid: AWSCloudTrailSNSPolicy
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Resource: !Ref TrailTopic
          Action: 'sns:Publish'
      Topics:
      - !Ref TrailTopic

  # Create KMS Key for CloudTrail
  TrailKey:
    Condition: InternalBucket
    Type: 'AWS::KMS::Key'
    Properties:
      Description: 'CloudTrail KMS Key'
      Enabled: true
      EnableKeyRotation: false
      KeyPolicy:
        Version: "2012-10-17"
        Id: "key-default-1"
        Statement:
          -
            Sid: "Allow alias creation"
            Effect: "Allow"
            Principal:
              AWS: [
                "*"
              ]
            Action:
              - "kms:CreateAlias"
            Resource: "*"
            Condition:
              StringEquals:
                'kms:ViaService': !Sub 'ec2.${AWS::Region}.amazonaws.com'
                'kms:CallerAccount': !Sub '${AWS::AccountId}'
          -
            Sid: "Allow administration of the key"
            Effect: "Allow"
            Principal:
              AWS: [
                !Sub 'arn:aws:iam::${AWS::AccountId}:root'
              ]
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          -
            Sid: "Allow CloudTrail to describe the key"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action:
              - "kms:DescribeKey"
            Resource: "*"
          -
            Sid: "Allow CloudTrail to encrypt logs"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action:
              - "kms:GenerateDataKey*"
            Resource: "*"
            Condition:
              StringLike:
                kms:EncryptionContext:aws:cloudtrail:arn:
                  - !Sub 'arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*'
                  - !Join [ "", [ "arn:aws:cloudtrail:*:", !Select [0, !Ref AdditionalAccounts ], ":trail/*" ] ]
                  - !Join [ "", [ "arn:aws:cloudtrail:*:", !Select [1, !Ref AdditionalAccounts ], ":trail/*" ] ]
                  - !Join [ "", [ "arn:aws:cloudtrail:*:", !Select [2, !Ref AdditionalAccounts ], ":trail/*" ] ]
          -
            Sid: "Allow Sumologic to decrypt the logs"
            Effect: "Allow"
            Principal:
              AWS: !GetAtt Sumologic.Arn
            Action:
              - "kms:Decrypt"
              - "kms:DescribeKey"
            Resource: "*"

  # Create KMS Key for CloudTrail
  TrailKeyAlias:
    Condition: InternalBucket
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: 'alias/CloudTrail-KMS-Key'
      TargetKeyId: !Ref TrailKey

  # Create the CloudTrail
  Trail:
    Condition: InternalBucket
    DependsOn:
    - TrailBucketPolicy
    - TrailTopicPolicy
    - TrailKey
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      IncludeGlobalServiceEvents: true
      EnableLogFileValidation: true
      IsLogging: true
      IsMultiRegionTrail: true
      S3BucketName: !Ref TrailBucket
      CloudWatchLogsLogGroupArn: !Sub '${TrailLogGroup.Arn}'
      CloudWatchLogsRoleArn: !Sub '${TrailLogGroupRole.Arn}'
      SnsTopicName: !Sub '${TrailTopic.TopicName}'
      KMSKeyId: !Ref TrailKeyAlias
  ExternalTrail:
    Condition: ExternalBucket
    DependsOn:
    - TrailTopicPolicy
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      IncludeGlobalServiceEvents: true
      EnableLogFileValidation: true
      IsLogging: true
      IsMultiRegionTrail: true
      S3BucketName: !Ref ExternalTrailBucket
      CloudWatchLogsLogGroupArn: !Sub '${TrailLogGroup.Arn}'
      CloudWatchLogsRoleArn: !Sub '${TrailLogGroupRole.Arn}'
      SnsTopicName: !Sub '${TrailTopic.TopicName}'
      KMSKeyId: !Ref TrailKeyArn

Outputs:
  CloudTrailInternal:
    Condition: InternalBucket
    Description: "CloudTrail Name"
    Value: !Ref Trail

  CloudTrailExternal:
    Condition: ExternalBucket
    Description: "CloudTrail Name"
    Value: !Ref ExternalTrail

  CloudTrailBucketInternal:
    Condition: InternalBucket
    Description: "S3 Bucket for Logs"
    Value: !Ref TrailBucket

  CloudTrailKeyArn:
    Condition: InternalBucket
    Description: "KMS Key ARN"
    Value: !GetAtt TrailKey.Arn

  CloudTrailKeyAlias:
    Condition: InternalBucket
    Description: "KMS Key Alias Name"
    Value: !Ref TrailKeyAlias

  SumologicAccessKey:
    Condition: InternalBucket
    Description: "Sumologic Access Key"
    Value: !Ref SumologicAccessKey

  SumologicSecretAccessKey:
    Condition: InternalBucket
    Description: "Sumologic Secret Access Key"
    Value: !GetAtt SumologicAccessKey.SecretAccessKey
