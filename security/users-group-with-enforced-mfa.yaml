---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create Users Group and Enforce MFA'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'User Group Parameters'
      Parameters:
      - UserGroupName

Parameters:
  UserGroupName:
    Description: 'The name of the users group'
    Type: String
    MaxLength: 64

Conditions:
  NeedsUserGroup: !Not [!Equals [!Ref UserGroupName, ""]]

Resources:
  # We expect all users to be in the users group.
  UserGroup:
    Condition: NeedsUserGroup
    Type: "AWS::IAM::Group"
    Properties:
      GroupName: !Ref UserGroupName

  EnforceMFAPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "This policy allows users to manage their own passwords and MFA devices but nothing else unless they authenticate with MFA."
      ManagedPolicyName: EnforceMFAs
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        # Allow all users to list accounts
        -
          Effect: "Allow"
          Action:
          - "iam:ListAccountAliases"
          - "iam:ListUsers*"
          - "iam:GetAccountSummary"
          Resource:
          - "*"
        # Allow individual user to see and manager their own account information
        -
          Effect: "Allow"
          Action:
          - "iam:ChangePassword"
          - "iam:CreateAccessKey"
          - "iam:CreateLoginProfile"
          - "iam:DeleteAccessKey"
          - "iam:DeleteLoginProfile"
          - "iam:GetAccountPasswordPolicy"
          - "iam:GetLoginProfile"
          - "iam:ListAccessKeys"
          - "iam:UpdateAccessKey"
          - "iam:UpdateLoginProfile"
          - "iam:ListSigningCertificates"
          - "iam:DeleteSigningCertificate"
          - "iam:UpdateSigningCertificate"
          - "iam:UploadSigningCertificate"
          - "iam:ListSSHPublicKeys"
          - "iam:GetSSHPublicKey"
          - "iam:DeleteSSHPublicKey"
          - "iam:UpdateSSHPublicKey"
          - "iam:UploadSSHPublicKey"
          Resource:
          - !Join ["", [!Sub "arn:aws:iam::${AWS::AccountId}", ":user/${aws:username}"]]
          # Allow individual user to list their own MFA
          -
            Effect: "Allow"
            Action:
            - "iam:ListVirtualMFADevices"
            - "iam:ListMFADevices"
            Resource:
            - !Sub "arn:aws:iam::${AWS::AccountId}:mfa/"
            - !Join ["", [!Sub "arn:aws:iam::${AWS::AccountId}", ":mfa/${aws:username}"]]
            - !Join ["", [!Sub "arn:aws:iam::${AWS::AccountId}", ":user/${aws:username}"]]
          # Allow individual user to manage their own MFA
          -
            Effect: "Allow"
            Action:
            - "iam:CreateVirtualMFADevice"
            - "iam:DeactivateMFADevice"
            - "iam:DeleteVirtualMFADevice"
            - "iam:RequestSmsMfaRegistration"
            - "iam:FinalizeSmsMfaRegistration"
            - "iam:EnableMFADevice"
            - "iam:ResyncMFADevice"
            Resource:
            - !Join ["", [!Sub "arn:aws:iam::${AWS::AccountId}", ":mfa/${aws:username}"]]
            - !Join ["", [!Sub "arn:aws:iam::${AWS::AccountId}", ":user/${aws:username}"]]
          # Block any access other than above unless signed in with MFA
          -
            Effect: "Deny"
            NotAction:
            - "iam:ListAccountAliases"
            - "iam:ListUsers*"
            - "iam:GetAccountSummary"
            - "iam:ChangePassword"
            - "iam:CreateAccessKey"
            - "iam:CreateLoginProfile"
            - "iam:DeleteAccessKey"
            - "iam:DeleteLoginProfile"
            - "iam:GetAccountPasswordPolicy"
            - "iam:GetLoginProfile"
            - "iam:ListAccessKeys"
            - "iam:UpdateAccessKey"
            - "iam:UpdateLoginProfile"
            - "iam:ListSigningCertificates"
            - "iam:DeleteSigningCertificate"
            - "iam:UpdateSigningCertificate"
            - "iam:UploadSigningCertificate"
            - "iam:ListSSHPublicKeys"
            - "iam:GetSSHPublicKey"
            - "iam:DeleteSSHPublicKey"
            - "iam:UpdateSSHPublicKey"
            - "iam:UploadSSHPublicKey"
            - "iam:CreateVirtualMFADevice"
            - "iam:ListVirtualMFADevices"
            - "iam:DeactivateMFADevice"
            - "iam:DeleteVirtualMFADevice"
            - "iam:RequestSmsMfaRegistration"
            - "iam:FinalizeSmsMfaRegistration"
            - "iam:EnableMFADevice"
            - "iam:ResyncMFADevice"
            NotResource:
            - !Sub "arn:aws:iam::${AWS::AccountId}:mfa/"
            - !Join ["", [!Sub "arn:aws:iam::${AWS::AccountId}", ":mfa/${aws:username}"]]
            - !Join ["", [!Sub "arn:aws:iam::${AWS::AccountId}", ":user/${aws:username}"]]
            Condition:
              BoolIfExists:
                aws:MultiFactorAuthPresent: false
      Groups:
      - !Ref UserGroup
